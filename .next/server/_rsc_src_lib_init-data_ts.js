"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "_rsc_src_lib_init-data_ts";
exports.ids = ["_rsc_src_lib_init-data_ts"];
exports.modules = {

/***/ "(rsc)/./src/lib/init-data.ts":
/*!******************************!*\
  !*** ./src/lib/init-data.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initializeClientData: () => (/* binding */ initializeClientData)\n/* harmony export */ });\n// Função para inicializar dados básicos no banco de dados do cliente\nasync function initializeClientData(clientDb, companyId) {\n    try {\n        console.log(\"Iniciando inicializa\\xe7\\xe3o de dados b\\xe1sicos...\");\n        // Verificar se já existe um perfil de administrador\n        const adminProfile = await clientDb.$queryRaw`\n      SELECT * FROM \"Profile\" WHERE \"name\" = 'Administrador' LIMIT 1\n    `;\n        let profileId;\n        // Criar perfil de administrador se não existir\n        if (adminProfile.length === 0) {\n            console.log(\"Criando perfil de administrador...\");\n            const result = await clientDb.$queryRaw`\n        INSERT INTO \"Profile\" (\"name\", \"description\", \"companyId\", \"active\", \"updatedAt\")\n        VALUES ('Administrador', 'Perfil com acesso total ao sistema', ${companyId}::uuid, true, ${new Date()})\n        RETURNING \"id\"\n      `;\n            profileId = result[0].id;\n        } else {\n            profileId = adminProfile[0].id;\n        }\n        // Verificar se já existem módulos\n        const modulesCount = await clientDb.$queryRaw`\n      SELECT COUNT(*) as count FROM \"Module\"\n    `;\n        // Criar módulos básicos se não existirem\n        if (modulesCount[0].count === 0) {\n            console.log(\"Criando m\\xf3dulos b\\xe1sicos...\");\n            // Dashboard\n            const dashboardResult = await clientDb.$queryRaw`\n        INSERT INTO \"Module\" (\"name\", \"description\", \"icon\", \"path\", \"order\", \"companyId\", \"active\", \"updatedAt\")\n        VALUES ('Dashboard', 'Painel principal', 'dashboard', '/dashboard', 1, ${companyId}::uuid, true, ${new Date()})\n        RETURNING \"id\"\n      `;\n            const dashboardId = dashboardResult[0].id;\n            // Usuários\n            const usersResult = await clientDb.$queryRaw`\n        INSERT INTO \"Module\" (\"name\", \"description\", \"icon\", \"path\", \"order\", \"companyId\", \"active\", \"updatedAt\")\n        VALUES ('Usuários', 'Gerenciamento de usuários', 'users', '/users', 2, ${companyId}::uuid, true, ${new Date()})\n        RETURNING \"id\"\n      `;\n            const usersId = usersResult[0].id;\n            // Perfis\n            const profilesResult = await clientDb.$queryRaw`\n        INSERT INTO \"Module\" (\"name\", \"description\", \"icon\", \"path\", \"order\", \"companyId\", \"active\", \"updatedAt\")\n        VALUES ('Perfis', 'Gerenciamento de perfis', 'shield', '/profiles', 3, ${companyId}::uuid, true, ${new Date()})\n        RETURNING \"id\"\n      `;\n            const profilesId = profilesResult[0].id;\n            // Criar permissões para o perfil de administrador\n            console.log(\"Criando permiss\\xf5es para o perfil de administrador...\");\n            // Permissão para Dashboard\n            await clientDb.$executeRaw`\n        INSERT INTO \"Permission\" (\"profileId\", \"moduleId\", \"canView\", \"canCreate\", \"canEdit\", \"canDelete\", \"updatedAt\")\n        VALUES (${profileId}::uuid, ${dashboardId}::uuid, true, true, true, true, ${new Date()})\n      `;\n            // Permissão para Usuários\n            await clientDb.$executeRaw`\n        INSERT INTO \"Permission\" (\"profileId\", \"moduleId\", \"canView\", \"canCreate\", \"canEdit\", \"canDelete\", \"updatedAt\")\n        VALUES (${profileId}::uuid, ${usersId}::uuid, true, true, true, true, ${new Date()})\n      `;\n            // Permissão para Perfis\n            await clientDb.$executeRaw`\n        INSERT INTO \"Permission\" (\"profileId\", \"moduleId\", \"canView\", \"canCreate\", \"canEdit\", \"canDelete\", \"updatedAt\")\n        VALUES (${profileId}::uuid, ${profilesId}::uuid, true, true, true, true, ${new Date()})\n      `;\n        }\n        // Atualizar o usuário administrador para associá-lo ao perfil de administrador\n        const adminUser = await clientDb.$queryRaw`\n      SELECT * FROM \"ClientUser\" WHERE \"role\" = 'admin' LIMIT 1\n    `;\n        if (adminUser.length > 0 && adminUser[0].profileId === null) {\n            console.log(\"Associando usu\\xe1rio administrador ao perfil de administrador...\");\n            await clientDb.$executeRaw`\n        UPDATE \"ClientUser\" SET \"profileId\" = ${profileId}::uuid, \"updatedAt\" = ${new Date()}\n        WHERE \"id\" = ${adminUser[0].id}::uuid\n      `;\n        }\n        console.log(\"Inicializa\\xe7\\xe3o de dados b\\xe1sicos conclu\\xedda com sucesso!\");\n        return true;\n    } catch (error) {\n        console.error(\"Erro ao inicializar dados b\\xe1sicos:\", error);\n        return false;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/init-data.ts\n");

/***/ })

};
;